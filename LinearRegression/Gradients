#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Nov 10 21:23:56 2019
Title: Gradients
Source:CSE 6040 
"""

from numpy import linspace, meshgrid  
#linspace returns evenly space num
#meshgrid returns coordinate matrices from coordinate vectors
from numpy import vectorize #returns a single numpy array 
from numpy.random import rand
from matplotlib.pyplot import figure, xlabel, ylabel, contour, quiver, axis 


#function to computes f(x), assuming it is a two-dimensional vector
def f(x0, x1):
    return x0*x0+x1*x1

#function that implements gradient of f(x)
def grad_f(x0, x1):
    return 2*x0, 2*x1

x0 = linspace(-2, 2, 11)
x1 = linspace(-2, 2, 11)
X0, X1 = meshgrid(x0, x1)
print("X0: \n", X0)
print("X1: \n", X1)

f_vec = vectorize(f)
v = f_vec(X0, X1)
print("v: \n", v)

grad_f_vec = vectorize(grad_f)
z = randn(5)
gx, gy = grad_f_vec(z, -z)

#visualizing the gradient 
dX0, dX1 = grad_f(X0, X1)
cp = contour(X0, X1, v)
quiver(X0, X1, dX0, dX1, scale=40, headwidth=5)
xlabel('x0')
ylabel('x1')
axis('square')

